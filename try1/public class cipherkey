package javaapplication13;

public class cipherkey {
    
    public String normal;
    public String encrypted;
    private int key;
    public void SetNormal(String str)
    {
        normal=str;
    }
    public void SetEncrypted(String str)
    {
        encrypted = str;
    }
    public void setKey(int key)
    {
        this.key=key;
    }
    private String decryption()
    {
        String str="";
        int counter = encrypted.length();
        int[]array = new int[counter];
            for (int i = 0;i < counter;i++)
            {
                char single = encrypted.charAt(i);
                int n = (int) single;
               if (n >= 65 && n<=90)
                {
                   n = n-this.key; 
                   if (n < 65)
                       n =91-(65-n);
                }
                if (n>=97 && n<=122)
                {
                     n = n-this.key;
                    if (n < 97)
                        n = 123 - (97 - n);
                }
                array[i] = n;
            }
            for (int i=0;i < array.length;i++)
            {
                str += Character.toString((char)(int)array[i]);
            }
            return str;
    }
    private String encryption()
    {
    String str = "";
        int counter = normal.length();
        int[] array = new int[counter];
            for (int i = 0;i < counter;i++)
            {
                char single = normal.charAt(i);
                int k = (int) single;
                if (k >= 65 && k<=90)
                {
                   k = k+this.key; 
                   if (k > 90)
                       //int c = k;
                       k =64+(k - 90);
                }
                if (k>=97 && k<=122)
                {
                     k = k+this.key;
                    if (k > 122)
                        k = 96 + (k-122);
                }         
                
                array[i]= k;
    }
            for (int i=0;i < array.length;i++)
            {
                str += Character.toString((char)(int)array[i]);
            }
            return str;
    }
    public String GetDycrypted()
    {
        String k = decryption();
        return k;
    }
    public String GetEncrypted()
    {
        String m = encryption();
        return m;
    }   
}
